python3 -> ver si esta instalado

type(nombreVariable) -> muestra tipo de nombreVariable

print("hola") -> echo en php
print(f'hola mundo {nombreVariable}')

lista = ["hola1", "hola2", "hola3"]
", ".join(lista) -> une los elementos de la lista con ", "

cosa_que_une= ", "
cosa_que_une.join(lista) -> une los elementos de la lista con la cosa_que_une

concatenar en lugar de un . como en php es un +

numeros=[0,1,2,3,4,5,6,7,8,9]
numeros[2:5] -> sacaria [2,3,4]
numeros[1:9:2] -> sacaria [1,3,5,7]
numeros[9::-1] -> sacaria [9,8,7,6,5,4,3,2,1]
numeros[1:] -> sacaria [1,2,3,4,5,6,7,8,9]

a, b = 33, 42 -> se pueden declarar variables de esta forma

las listas pueden ser de distitos tipos ['fruta', 33, [1,2,3,4], ['o', 'u', 'x']]

len(nombreLista) -> muestra longitud de la lista

tuplas = (0, 'marcos')
tuplas -> sacaria (0, 'marcos')
tuplas[0] -> sacaria 0
las tuplas son un par de variables que no pueden ser modificados

nombre = "marcos"
nombre[1:3] -> sacaria "ar"

miinfo = {
    'nombre': "Marcos",
    'apellido': "Martin"
}
miinfo['nombre'] -> sacaria "Marcos"
miinfo['nuevaCosa'] = [1,2,3,4] -> aÃ±adiria la nuevaCosa a miinfo que quedaria de la siguiente manera:
miinfo = {
    'nombre': "Marcos",
    'apellido': "Martin",
    'nuevaCosa': = [1,2,3,4]
}
miinfo son diccionarios del tipo clave valor
miinfo.keys() -> muestra las keys del diccionarios
miinfo.values() -> muestra el valor del diccionario

eleva al cuadrado todos los elementos de un array llamado nums
>>> [x*x for x in nums]
[0, 1, 4, 9, 16, 25, 36, 49, 64, 81]

todos los elementos de un array a mayusculas
>>> fruits = ["pera","palatano","melon"]
>>> [x.upper() for x in fruits]
['PERA', 'PALATANO', 'MELON']

todos los elementos que empiezan por p
>>> [x.startswith('p') for x in fruits]
[True, True, False]

lista de numeros random
>>> import random
>>> [random.randrange(0,10) for _ in range(0,5)]
[9, 8, 8, 6, 9]

condicional
numeros impares del array
>>> [x for x in nums if x%2 != 0]
[7, 5, 7, 7]

condicional con modificacion
si es par eleva al cuadrado si es impar multiplica por -1
>>> [x*x if x%2 == 0 else -1*x for x in nums]
[-7, -5, 36, -7, -7]

si es par eleva al cuadrado si es impar multiplica por -1 solo para los numeros mayores a 5
>>> [x*x if x%2 == 0 else -1*x for x in nums if x > 5]
[-7, 36, -7, -7]
